{"ast":null,"code":"var _jsxFileName = \"/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Nav';\nimport Main from './Main';\nimport DailyGoal from './DailyGoal';\nimport Footer from './Footer';\nimport User from './User';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { getByPlaceholderText } from '@testing-library/react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateFirebase = () => {\n      let userRef = firebase.database().ref(this.state.user);\n      userRef.set({\n        date: this.state.date,\n        goal: this.state.goal,\n        tree: this.state.tree,\n        flower: this.state.flower,\n        time: this.state.time\n      }).catch(err => console.log(err)); // log any erros\n    };\n\n    this.enterUser = user => {\n      this.setState(currentState => {\n        currentState.user = user.replace(/[^a-zA-Z0-9]/g, \"\");\n        return currentState;\n      });\n    };\n\n    this.enterGoal = (goal, goalTime) => {\n      this.setState(currentState => {\n        currentState.goal = goal;\n        currentState.time = goalTime;\n        currentState.treeNum = 0;\n        currentState.flowerNum = 0;\n        currentState.date = getDate();\n        return currentState;\n      });\n    };\n\n    this.enterTree = (tree, treePath) => {\n      this.setState(currentState => {\n        currentState.tree = tree;\n        currentState.treeImg = treePath;\n        currentState.didSelectTree = true;\n        return currentState;\n      });\n    };\n\n    this.enterFlower = (flower, flowerPath) => {\n      this.setState(currentState => {\n        currentState.flower = flower;\n        currentState.flowerImg = flowerPath;\n        console.log(flower);\n        currentState.didSelectFlower = true;\n        return currentState;\n      });\n    };\n\n    this.addTreeNum = () => {\n      this.setState({\n        treeNum: this.state.treeNum + 1\n      });\n    };\n\n    this.addFlowerNum = () => {\n      this.setState({\n        flowerNum: this.state.flowerNum + 1\n      });\n      console.log(this.state.flowerNum);\n    };\n\n    this.state = {\n      user: \"\",\n      date: \"\",\n      goal: \"\",\n      time: \"\",\n      flower: \"\",\n      flowerImg: \"\",\n      tree: \"\",\n      treeImg: \"\",\n      treeNum: 0,\n      flowerNum: 0,\n      animal: \"\",\n      didSelectTree: false,\n      didSelectFlower: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: routerProps => /*#__PURE__*/React.createElement(DailyGoal, Object.assign({}, routerProps, {\n        goalCallback: this.enterGoal,\n        pageCallback: this.updatePage,\n        treeCallback: this.enterTree,\n        flowerCallback: this.enterFlower,\n        userInfo: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/content\",\n      render: routerProps => /*#__PURE__*/React.createElement(Main, Object.assign({}, routerProps, {\n        userInfo: this.state,\n        pageCallback: this.updatePage,\n        goalCallback: this.enterGoal,\n        treeCallback: this.enterTree,\n        flowerCallback: this.enterFlower,\n        addTreeNum: this.addTreeNum,\n        addFlowerNum: this.addFlowerNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/user\",\n      render: routerProps => /*#__PURE__*/React.createElement(User, Object.assign({}, routerProps, {\n        userCallback: this.enterUser,\n        firebaseCallback: this.updateFirebase,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/App.js"],"names":["React","Component","Navbar","Main","DailyGoal","Footer","User","BrowserRouter","Route","Switch","getByPlaceholderText","App","constructor","props","updateFirebase","userRef","firebase","database","ref","state","user","set","date","goal","tree","flower","time","catch","err","console","log","enterUser","setState","currentState","replace","enterGoal","goalTime","treeNum","flowerNum","getDate","enterTree","treePath","treeImg","didSelectTree","enterFlower","flowerPath","flowerImg","didSelectFlower","addTreeNum","addFlowerNum","animal","render","routerProps","updatePage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport Navbar from './Nav';\nimport Main from './Main';\nimport DailyGoal from './DailyGoal';\nimport Footer from './Footer';\nimport User from './User';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { getByPlaceholderText } from '@testing-library/react';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        user: \"\",\n        date: \"\",\n        goal: \"\",\n        time: \"\",\n        flower: \"\",\n        flowerImg: \"\",\n        tree: \"\",\n        treeImg: \"\",\n        treeNum: 0,\n        flowerNum: 0,\n        animal: \"\",\n        didSelectTree: false,\n        didSelectFlower: false\n    }\n}\n\n  updateFirebase = () => {\n      let userRef = firebase.database().ref(this.state.user);\n      userRef.set( {\n        date: this.state.date,\n        goal: this.state.goal,\n        tree: this.state.tree,\n        flower: this.state.flower,\n        time: this.state.time\n      })\n      .catch(err => console.log(err)); // log any erros\n  }\n\n\n  enterUser = (user) => {\n    this.setState((currentState) => {\n      currentState.user = user.replace(/[^a-zA-Z0-9]/g, \"\");\n      return currentState;\n    })\n  }\n\n  enterGoal = (goal, goalTime) => {\n    this.setState((currentState) => {\n        currentState.goal = goal;\n        currentState.time = goalTime;\n        currentState.treeNum = 0;\n        currentState.flowerNum = 0;\n        currentState.date = getDate();\n        return currentState;\n    })\n}\n\n\n\n  enterTree = (tree, treePath) => {\n      this.setState((currentState) => {\n          currentState.tree = tree;\n          currentState.treeImg = treePath;\n          currentState.didSelectTree = true;\n          return currentState;\n      })\n  }\n\n  enterFlower = (flower, flowerPath) => {\n      this.setState((currentState) => {\n          currentState.flower = flower;\n          currentState.flowerImg = flowerPath;\n          console.log(flower)\n          currentState.didSelectFlower = true;\n          return currentState;\n      })\n  }\n\n\n  addTreeNum = () => {\n    this.setState({\n        treeNum: this.state.treeNum + 1\n    });\n  }\n\n  addFlowerNum = () => {\n    this.setState({\n        flowerNum: this.state.flowerNum + 1\n    });\n    console.log(this.state.flowerNum);\n  }\n\n  render() {\n    return (\n      <div>\n          \n\n          <BrowserRouter>\n            <Navbar/>\n\n              <Switch>\n\n              <Route path='/' exact render={(routerProps) => (\n                  <DailyGoal {...routerProps} goalCallback={this.enterGoal} pageCallback={this.updatePage} treeCallback={this.enterTree} flowerCallback={this.enterFlower} userInfo={this.state}/>\n              )} />\n\n              <Route path='/content' render={(routerProps) => (\n                  <Main {...routerProps} userInfo={this.state} pageCallback={this.updatePage} goalCallback={this.enterGoal} treeCallback={this.enterTree} flowerCallback={this.enterFlower} addTreeNum={this.addTreeNum} addFlowerNum={this.addFlowerNum}/>\n              )} />\n\n              <Route path='/user' render={(routerProps) => (\n                  <User {...routerProps} userCallback={this.enterUser} firebaseCallback={this.updateFirebase}/>\n              )}/>\n\n              </Switch>\n\n            <Footer/>\n          </BrowserRouter>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}