{"ast":null,"code":"var _jsxFileName = \"/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/Card.js\";\nimport React, { Component } from 'react'; // css\n\nimport './index.css'; // fetch\n\nimport 'whatwg-fetch';\n\nclass TreeCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      // Update the state and change the page content\n      event.preventDefault();\n      console.log(event.currentTarget);\n      this.setState(currState => {\n        currState.tree = event.currentTarget.name;\n        console.log(currState.tree);\n      });\n      this.props.treeCallback(event.currentTarget.name);\n    };\n\n    this.state = {\n      tree: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      name: this.props.info.name,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.info.img,\n      alt: this.props.info.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, this.props.info.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, this.props.info.description));\n  }\n\n}\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.enterTree = tree => {\n      this.setState(currentState => {\n        currentState.tree = tree;\n        console.log(currentState.tree);\n        return currentState;\n      });\n    };\n\n    this.state = {\n      tree: \"\",\n      flower: \"\"\n    };\n  }\n\n  render() {\n    let treeCards = this.props.info.map(eachInfo => {\n      if (eachInfo.type === \"Tree\") {\n        return /*#__PURE__*/React.createElement(TreeCard, {\n          info: eachInfo,\n          key: eachInfo.id,\n          enterTree: this.enterTree,\n          treeCallback: this.props.treeCallback,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return undefined;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"col-sm-12 col-md-9 col-lg-10 scheduleForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"ml-2 mt-2 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Here are the trees that you can grow:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-pool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, treeCards), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"ml-2 mt-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Here are the flowers that you can plant:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-pool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      // Update the state for the tree and flower selection\n      if (this.props.info.type === \"Tree\") {\n        this.setState({\n          tree: event.target.name\n        });\n        console.log(this.state.tree);\n        this.props.treeCallback(this.state.tree);\n      }\n    };\n\n    this.state = {\n      tree: \"\",\n      flower: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TypeList, {\n      info: this.props.info,\n      handleClick: this.handleClick,\n      treeCallback: this.props.treeCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/Card.js"],"names":["React","Component","TreeCard","constructor","props","handleClick","event","preventDefault","console","log","currentTarget","setState","currState","tree","name","treeCallback","state","render","info","img","description","TypeList","enterTree","currentState","flower","treeCards","map","eachInfo","type","id","undefined","Card","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \n\n// css\nimport './index.css';\n\n// fetch\nimport 'whatwg-fetch';\n\nclass TreeCard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tree: \"\"\n        }\n    }\n\n    handleClick = (event) => {\n        // Update the state and change the page content\n        event.preventDefault();\n        \n        console.log(event.currentTarget);\n        this.setState((currState) => {\n            currState.tree = event.currentTarget.name;\n            console.log(currState.tree);\n        })\n         this.props.treeCallback(event.currentTarget.name);\n    }\n\n    render() {\n        return(\n            <div className=\"card\" name={this.props.info.name} onClick={this.handleClick}>\n                <img src={this.props.info.img} alt={this.props.info.name}/>\n                <h4 className=\"mt-4\">{this.props.info.name}</h4>\n                <p className=\"description\">{this.props.info.description}</p>\n            </div>\n        )\n    }\n}\n\nclass TypeList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tree: \"\",\n            flower: \"\"\n        };\n    }\n\n    enterTree = (tree) => {\n        this.setState((currentState) => {\n            currentState.tree = tree;\n            console.log(currentState.tree);\n            return currentState;\n        })\n    }\n\n    render() {\n        let treeCards = this.props.info.map((eachInfo) => {\n            if (eachInfo.type === \"Tree\") {\n                return <TreeCard info={eachInfo} key={eachInfo.id} enterTree={this.enterTree} treeCallback={this.props.treeCallback}/>\n            } else {\n                return undefined;\n            }\n        });\n\n\n        return(\n            <div>\n                <section className=\"col-sm-12 col-md-9 col-lg-10 scheduleForm\">\n                    <h1 className=\"ml-2 mt-2 mb-3\">Here are the trees that you can grow:</h1>\n                    <div className=\"card-pool\">\n                        {treeCards}\n                    </div>\n                    <br />\n                    <h1 className=\"ml-2 mt-3 mb-3\">Here are the flowers that you can plant:</h1>\n                    <div className=\"card-pool\">\n                        {/* {flowerCards} */}\n                    </div>\n                </section>\n            </div>\n            \n        )\n    }\n\n}\n\nexport default class Card extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tree: \"\",\n            flower: \"\"\n        };\n\n    }\n\n    handleClick = (event) => {\n        // Update the state for the tree and flower selection\n        if(this.props.info.type === \"Tree\") {\n            this.setState({\n                tree: event.target.name\n            })\n            console.log(this.state.tree);\n            this.props.treeCallback(this.state.tree);\n        }\n         \n    }\n\n    render() {\n        return(\n            <div>\n                <TypeList info={this.props.info} handleClick={this.handleClick} treeCallback={this.props.treeCallback}/>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}