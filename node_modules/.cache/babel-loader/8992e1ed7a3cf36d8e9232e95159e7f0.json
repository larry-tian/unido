{"ast":null,"code":"var _jsxFileName = \"/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/SignUpForm.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nexport default class SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.uiConfig = {\n      //which sign in values should we support?\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n      // for external sign-in methods, use popup instead of redirect\n      signInFlow: \"popup\"\n    };\n\n    this.handleSignOut = () => {\n      this.ListeningStateChangedEvent({\n        errorMessage: null\n      }); //clear old error\n\n      firebase.auth.signOut().catch(err => {\n        this.setState({\n          errorMessage: err.message\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      let field = event.target.name; //which input\n\n      let value = event.target.value; //what value\n\n      let changes = {}; //object to hold changes\n\n      changes[field] = value;\n      this.setState(changes);\n    };\n\n    this.state = {\n      user: null\n    };\n  } // Configure Firebase UI (inside the component, public class field)\n\n\n  componentDidMount() {\n    this.authUnSubFunction = firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        // If exists, then we logged in\n        console.log(\"Logged in as\", firebaseUser.email);\n        this.setState({\n          user: firebaseUser\n        });\n      } else {\n        console.log(\"Logged out\");\n        this.setState({\n          user: null\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.authUnSubFunction(); // stop listening for auth changes\n  }\n\n  render() {\n    let content = null;\n\n    if (!this.state.user) {\n      //signed out\n      content = /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n        uiConfig: this.uiConfig,\n        firebaseAuth: firebase.auth(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      });\n    } else {\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, \"Logged in as \", this.StaticRange.user.displayName, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-warning float-right\",\n        onClick: this.handleSignOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, \"Sign Out\"))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 col-md-3 col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"scheduleTitleTop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"User Profile\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"alert alert-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, this.state.errorMessage), content));\n  }\n\n}","map":{"version":3,"sources":["/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/SignUpForm.js"],"names":["React","Component","firebase","StyledFirebaseAuth","SignUpForm","constructor","props","uiConfig","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","signInFlow","handleSignOut","ListeningStateChangedEvent","errorMessage","signOut","catch","err","setState","message","handleChange","event","field","target","name","value","changes","state","user","componentDidMount","authUnSubFunction","onAuthStateChanged","firebaseUser","console","log","email","componentWillUnmount","render","content","StaticRange","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n\nexport default class SignUpForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user: null\n        };\n    }\n\n     // Configure Firebase UI (inside the component, public class field)\n    uiConfig = {\n        //which sign in values should we support?\n        signInOptions: [\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID\n        ],\n        // for external sign-in methods, use popup instead of redirect\n        signInFlow: \"popup\"\n    };\n\n    componentDidMount() {\n\n        this.authUnSubFunction = firebase.auth().onAuthStateChanged((firebaseUser) => {\n            if (firebaseUser) {         // If exists, then we logged in\n                console.log(\"Logged in as\", firebaseUser.email);\n                this.setState({ user: firebaseUser })\n            } else {\n                console.log(\"Logged out\");\n                this.setState({ user: null })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.authUnSubFunction(); // stop listening for auth changes\n    }\n    \n    handleSignOut = () => {\n        this.ListeningStateChangedEvent({ errorMessage:null }); //clear old error\n    \n        firebase.auth.signOut()\n        .catch((err) => {\n            this.setState({errorMessage: err.message})\n        })\n    }\n    \n    handleChange = (event) => {\n        let field = event.target.name;  //which input\n        let value = event.target.value; //what value\n    \n        let changes = {}; //object to hold changes\n        changes[field] = value;\n        this.setState(changes);\n    }\n    \n    \n   \n    \n    \n    \n    render() {\n        let content = null;\n        if(!this.state.user) { //signed out\n            content = (\n                <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n            )\n        } else {\n            content = (\n                <div>\n                    <div className=\"alert alert-success\">\n                        <h3>Logged in as {this.StaticRange.user.displayName}\n                            <button className=\"btn btn-warning float-right\" onClick={this.handleSignOut}>\n                                Sign Out\n                            </button>\n                        </h3> \n                    </div>\n                </div>\n            )\n        }\n    \n        return (\n            <div className=\"col-sm-12 col-md-3 col-lg-3\">\n                <h2 className=\"scheduleTitleTop\">User Profile</h2>\n                <section className=\"ml-3\">\n                    {/* only included if first clause is true */}\n                    {this.state.errorMessage &&\n                        <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n                    }\n            \n                    {/* show content based on user login state */}\n                    {content}\n                </section>\n    \n            </div>\n        )\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}