{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = formatDate;\nexports.getDelta = getDelta;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction formatDate(toDate, targetFormatMask, sourceFormatMask) {\n  // to prevent from returning negative duration\n  var countdownMillisecond = Math.max(0, getDelta(toDate, sourceFormatMask));\n\n  var duration = _moment[\"default\"].duration(countdownMillisecond); //to correctly display the countdown from the most granular unit\n\n\n  var countdownString = _moment[\"default\"].utc(duration.as('milliseconds')).format(targetFormatMask);\n\n  return [countdownMillisecond, countdownString];\n}\n\nfunction getDelta(toDate, sourceFormatMask) {\n  if (!_moment[\"default\"].isMoment(toDate)) {\n    var convert = _moment[\"default\"].isDate(toDate) ? (0, _moment[\"default\"])(toDate) : (0, _moment[\"default\"])(toDate, sourceFormatMask);\n    return convert.diff((0, _moment[\"default\"])());\n  }\n\n  return toDate.diff((0, _moment[\"default\"])());\n}","map":{"version":3,"sources":["/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/node_modules/react-moment-countdown/dist/format-date.js"],"names":["Object","defineProperty","exports","value","formatDate","getDelta","_moment","_interopRequireDefault","require","obj","__esModule","toDate","targetFormatMask","sourceFormatMask","countdownMillisecond","Math","max","duration","countdownString","utc","as","format","isMoment","convert","isDate","diff"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,UAArB;AACAF,OAAO,CAACG,QAAR,GAAmBA,QAAnB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASL,UAAT,CAAoBO,MAApB,EAA4BC,gBAA5B,EAA8CC,gBAA9C,EAAgE;AAC9D;AACA,MAAIC,oBAAoB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYX,QAAQ,CAACM,MAAD,EAASE,gBAAT,CAApB,CAA3B;;AAEA,MAAII,QAAQ,GAAGX,OAAO,CAAC,SAAD,CAAP,CAAmBW,QAAnB,CAA4BH,oBAA5B,CAAf,CAJ8D,CAII;;;AAGlE,MAAII,eAAe,GAAGZ,OAAO,CAAC,SAAD,CAAP,CAAmBa,GAAnB,CAAuBF,QAAQ,CAACG,EAAT,CAAY,cAAZ,CAAvB,EAAoDC,MAApD,CAA2DT,gBAA3D,CAAtB;;AAEA,SAAO,CAACE,oBAAD,EAAuBI,eAAvB,CAAP;AACD;;AAED,SAASb,QAAT,CAAkBM,MAAlB,EAA0BE,gBAA1B,EAA4C;AAC1C,MAAI,CAACP,OAAO,CAAC,SAAD,CAAP,CAAmBgB,QAAnB,CAA4BX,MAA5B,CAAL,EAA0C;AACxC,QAAIY,OAAO,GAAGjB,OAAO,CAAC,SAAD,CAAP,CAAmBkB,MAAnB,CAA0Bb,MAA1B,IAAoC,CAAC,GAAGL,OAAO,CAAC,SAAD,CAAX,EAAwBK,MAAxB,CAApC,GAAsE,CAAC,GAAGL,OAAO,CAAC,SAAD,CAAX,EAAwBK,MAAxB,EAAgCE,gBAAhC,CAApF;AACA,WAAOU,OAAO,CAACE,IAAR,CAAa,CAAC,GAAGnB,OAAO,CAAC,SAAD,CAAX,GAAb,CAAP;AACD;;AAED,SAAOK,MAAM,CAACc,IAAP,CAAY,CAAC,GAAGnB,OAAO,CAAC,SAAD,CAAX,GAAZ,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = formatDate;\nexports.getDelta = getDelta;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction formatDate(toDate, targetFormatMask, sourceFormatMask) {\n  // to prevent from returning negative duration\n  var countdownMillisecond = Math.max(0, getDelta(toDate, sourceFormatMask));\n\n  var duration = _moment[\"default\"].duration(countdownMillisecond); //to correctly display the countdown from the most granular unit\n\n\n  var countdownString = _moment[\"default\"].utc(duration.as('milliseconds')).format(targetFormatMask);\n\n  return [countdownMillisecond, countdownString];\n}\n\nfunction getDelta(toDate, sourceFormatMask) {\n  if (!_moment[\"default\"].isMoment(toDate)) {\n    var convert = _moment[\"default\"].isDate(toDate) ? (0, _moment[\"default\"])(toDate) : (0, _moment[\"default\"])(toDate, sourceFormatMask);\n    return convert.diff((0, _moment[\"default\"])());\n  }\n\n  return toDate.diff((0, _moment[\"default\"])());\n}"]},"metadata":{},"sourceType":"script"}