{"ast":null,"code":"var _jsxFileName = \"/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/Card.js\";\nimport React, { Component } from 'react'; // css\n\nimport './index.css'; // fetch\n\nimport 'whatwg-fetch';\n\nclass TypeCard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.info.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, this.props.info.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, this.props.info.description));\n  }\n\n}\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let cards = this.props.info.map(eachInfo => {\n      return /*#__PURE__*/React.createElement(TypeCard, {\n        info: eachInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n}\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"./treeInfo.json\").then(res => res.json()).then(data => {\n      this.setState(currState => {\n        let allTreesFlowers = currState.trees.concat(data);\n        return {\n          info: allTreesFlowers\n        };\n      }); // end of setState\n    }); // end of fetch\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-pool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TypeList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ganlintian/Desktop/info_340/HW/project-2-raphaelkyle/src/Card.js"],"names":["React","Component","TypeCard","constructor","props","render","info","img","name","description","TypeList","cards","map","eachInfo","Card","state","componentDidMount","fetch","then","res","json","data","setState","currState","allTreesFlowers","trees","concat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAO,aAAP,C,CAEA;;AACA,OAAO,cAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,IAArB,CAFJ,eAGI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,WAA5C,CAHJ,CADJ;AAOH;;AAb4B;;AAgBjC,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIM,KAAK,GAAG,KAAKP,KAAL,CAAWE,IAAX,CAAgBM,GAAhB,CAAqBC,QAAD,IAAc;AAC1C,0BAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFW,CAAZ;AAGH;;AAT4B;;AAYjC,eAAe,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKW,KAAL,GAAa;AACTT,MAAAA,IAAI,EAAE;AADG,KAAb;AAIH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAeC,SAAD,IAAe;AACzB,YAAIC,eAAe,GAAGD,SAAS,CAACE,KAAV,CAAgBC,MAAhB,CAAuBL,IAAvB,CAAtB;AAEA,eAAO;AAACf,UAAAA,IAAI,EAAEkB;AAAP,SAAP;AACH,OAJD,EADY,CAKR;AACP,KARD,EADgB,CASZ;AACP;;AAEDnB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA5BuC","sourcesContent":["import React, { Component } from 'react'; \n\n// css\nimport './index.css';\n\n// fetch\nimport 'whatwg-fetch';\n\nclass TypeCard extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div class=\"card\">\n                <img src={this.props.info.img}/>\n                <h4>{this.props.info.name}</h4>\n                <p className=\"description\">{this.props.info.description}</p>\n            </div>\n        )\n    }\n}\n\nclass TypeList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let cards = this.props.info.map((eachInfo) => {\n            return <TypeCard info={eachInfo} />\n        });\n    }\n}\n\nexport default class Card extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: []\n        }\n\n    }\n\n    componentDidMount() {\n        fetch(\"./treeInfo.json\")\n        .then((res) => res.json())\n        .then((data) => {\n            this.setState((currState) => {\n                let allTreesFlowers = currState.trees.concat(data);\n\n                return {info: allTreesFlowers};\n            }); // end of setState\n        }); // end of fetch\n    }\n\n    render() {\n        return(\n            <div className=\"card-pool\">\n                <TypeList />\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}