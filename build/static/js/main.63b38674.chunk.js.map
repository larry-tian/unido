{"version":3,"sources":["Nav.js","Achievements.js","YourForest.js","Timer.js","SideBar.js","DailyGoalDisplay.js","ForestDisplay.js","ForestContent.js","FocusPlaylist.js","Main.js","Card.js","PersonalPreference.js","DailyGoal.js","Footer.js","SignUpForm.js","UserInfo.js","User.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","aria-label","src","alt","Component","Achievements","animalNum","this","props","treeNum","flowerNum","aria-hidden","YourForest","tree","flower","ForestTimer","setTime","time","initialTime","direction","onPause","addFlowerNum","checkpoints","callback","addTreeNum","resume","pause","reset","Fragment","Hours","Minutes","Seconds","formatValue","value","onClick","SideBar","userInfo","DailyGoalDisplay","content","goal","undefined","Trees","trees","i","push","treeImg","treeName","key","id","Flowers","flowerImg","flowerName","ForestDisplay","role","ForestContent","FocusPlaylist","href","Main","TreeCard","handleClick","selectedTree","info","name","treeCallback","img","description","FlowerCard","selectedFlower","flowerCallback","CardList","setState","currentState","state","treeCards","map","eachInfo","type","flowerCards","CardPage","PersonalPreference","fetch","then","res","json","data","currState","concat","catch","err","console","log","DailyGoal","checkOne","checkTwo","didSelectTree","didSelectFlower","typeWarning","inputTime","numWarning","goalCallback","inputGoal","passedCheck","handleChange","event","target","typeWarningMsg","numWarningMsg","placeholder","onChange","Footer","SignUpForm","uiConfig","signInOptions","firebase","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","signInFlow","handleSignOut","errorMessage","signOut","message","userCallback","field","changes","user","authUnSubFunction","onAuthStateChanged","firebaseUser","email","displayName","firebaseAuth","UserInfo","database","ref","set","animal","displayContent","on","snapshot","val","App","enterUser","replace","enterGoal","goalTime","enterTree","treePath","enterFlower","flowerPath","path","exact","render","routerProps","pageCallback","updatePage","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.63b38674.chunk.js","sourcesContent":["import React, { Component } from 'react'; \nimport { NavLink } from 'react-router-dom'\n\nexport default class Navbar extends Component {\n\n  render() {\n\n    return(\n      <div>\n          <nav>\n              <ul>\n                <div className=\"container\">\n                  <div className=\"row\">\n\n                    <div className=\"col d-flex\">\n                      <li><NavLink to=\"/content\" aria-label=\"Change Goal\"><img className=\"nav-dim\" src=\"./img/logo.png\" alt=\"Animal Forest logo\"/></NavLink></li>\n                    </div>\n\n                    <div className=\"col-3 d-flex\"></div>\n                        <div className=\"col d-flex pt-2\">\n                            <li><NavLink to=\"/\" aria-label=\"Change Goal\">Change Goal</NavLink></li>\n                            <li><NavLink to=\"/user\" aria-label=\"User Profile\">User Profile</NavLink></li>\n                        </div> \n                  </div>\n                </div>\n              </ul>\n          </nav>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react'; \n\nexport default class Achievements extends Component {\n    render() {\n        // Calculate the number of animals\n        let animalNum = this.props.treeNum * 3 + this.props.flowerNum;\n        return(\n            <div>\n                <div className=\"menu-item\">\n                    {/* Display the current forest status */}\n                     <section className=\"menu-functionality\">\n                        <h1 className=\"centered\">Achievements</h1>\n                        <hr aria-hidden=\"true\"/>\n                        <p>Trees grown: <strong className=\"streaks centered\">{this.props.treeNum} Trees</strong></p>\n                        <p>Flowers grown: <strong className=\"streaks centered\">{this.props.flowerNum} Flowers</strong></p>\n                        <p>Animals attracted: <strong className=\"streaks centered\">{animalNum} Animals</strong></p>\n                    </section>\n                </div>\n            </div>\n        );\n    }\n\n}","import React, { Component } from 'react'; \n\nexport default class YourForest extends Component {\n\n    render() {\n\n        return(\n            <div>\n                <div className=\"menu-item\">\n                    {/* Display the personal preference */}\n                    <section className=\"menu-functionality\">\n                        <h1 className=\"centered\">Your Forest</h1>\n                        <hr aria-hidden=\"true\"/>\n                        <p>Tree Type: <strong className=\"streaks centered\">{this.props.tree}</strong></p>\n                        <p>Flower Type: <strong className=\"streaks centered\">{this.props.flower}</strong></p>\n                    </section>\n                </div>\n            </div>\n        );\n    }\n\n}","import React, { Component } from 'react'; \nimport Timer from 'react-compound-timer';\n\nexport default class ForestTimer extends Component {\n\n    render() {\n\n        // Set time to be minute-based\n        let setTime = this.props.time * 60000\n\n        return (\n            <div className=\"menu-item\">\n                <section>\n                    <h1 className=\"centered\">Countdown</h1>\n                    <hr aria-hidden=\"true\" />\n                    {/* React Library: Count Down */}\n                    <Timer \n                    initialTime={setTime}\n                    direction=\"backward\"\n                    onPause={() => {\n                        // Increase the number of flowers in App.js\n                        this.props.addFlowerNum();\n                    }}\n                    checkpoints={[\n                        {\n                            // Grow the first tree\n                            time: setTime - 15000, //After 15 seconds\n                            callback: () => {\n                                this.props.addTreeNum();\n                            }\n                        },\n                        {\n                            // Grow the second tree\n                            time: setTime - 30000, // After 30 seconds\n                            callback: () => {\n                                this.props.addTreeNum();\n                            }\n                        },\n                        {\n                            // Grow the third tree\n                            time: setTime - 45000, // After 45 seconds\n                            callback: () => {\n                                this.props.addTreeNum();\n                            }\n                        }\n                    ]}>\n                    \n                    {/* Timer Display */}\n                    {({resume, pause, reset}) => (\n                        <React.Fragment>\n                            <div className=\"centered\">\n                                <h1 className=\"streaks\">\n                                <Timer.Hours /> Hours <p>{/* Line break */}</p>  \n                                <Timer.Minutes /> Minutes <p>{/* Line break */}</p>  \n                                <Timer.Seconds formatValue={value => `${value}`}/> Seconds\n                                </h1>\n                            </div>\n\n                            <br />\n                            {/* Timer buttons */}\n                            <div className=\"text-center\">\n                                <button onClick={resume} className=\"btn btn-success mx-2\">Resume</button>\n                                <button onClick={pause} className=\"btn btn-warning mx-2\">Pause</button>\n                                <button onClick={reset} className=\"btn btn-secondary mx-2\">Restart</button>\n                            </div>\n                        </React.Fragment>\n                    )}\n                    </Timer>\n                </section>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'; \nimport Achievements from './Achievements';\nimport YourForest from './YourForest';\nimport ForestTimer from './Timer';\n\nexport default class SideBar extends Component {\n    render() {\n        return(\n                <div className=\"col-sm-12 col-md-3 col-lg-3\">\n                    <ForestTimer time={this.props.userInfo.time} addTreeNum={this.props.addTreeNum} addFlowerNum={this.props.addFlowerNum}/>\n                    <Achievements treeNum={this.props.userInfo.treeNum} flowerNum={this.props.userInfo.flowerNum}/>\n                    <YourForest tree={this.props.userInfo.tree} flower={this.props.userInfo.flower}/>\n                </div>\n        );\n    }\n\n}","import React, { Component } from 'react'; \n\nexport default class DailyGoalDisplay extends Component {\n    render() {\n        let content;\n        if (this.props.goal === \"\" | this.props.goal === undefined) {\n            content = <p>You haven't set any goals yet</p>\n        } else {\n            content = <p>{this.props.goal}</p>\n        }\n        return(\n            <div>\n                <section>\n                    <h1>Today's Goal </h1>\n                    <hr aria-hidden=\"true\"/>\n                    {content}\n                </section>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'; \n\nexport class Trees extends Component {\n    render() {\n        let trees = [];\n        // Create trees based on treeNum (max: 3)\n        if (this.props.treeNum < 3) {\n            for(let i = 0; i < this.props.treeNum; i++){\n                trees.push(<img src={this.props.treeImg} alt={this.props.treeName} key={i}/>);\n            }\n        } else {\n            for(let i = 0; i < 3; i++){\n                trees.push(<img src={this.props.treeImg} alt={this.props.treeName} key={i}/>);\n            }\n        }\n       \n        return(\n            <div id=\"trees\">\n                {trees}\n            </div>\n        )\n    }\n}\n\nexport class Flowers extends Component {\n    render() {     \n        let flower = [];\n        // Create flowers based on flowerNum (max: 20)\n        if (this.props.flowerNum < 20) {\n            for (let  i = 0; i < this.props.flowerNum; i++){\n                flower.push(<img src={this.props.flowerImg} alt={this.props.flowerName} key={i} />)\n            }\n        } else {\n            for (let  i = 0; i < 20; i++){\n                flower.push(<img src={this.props.flowerImg} alt={this.props.flowerName} key={i} />)\n            }\n        }\n        \n        return(\n            <div id=\"flowers\">\n                {flower}\n            </div>\n        )\n    }\n}\nexport default class ForestDisplay extends Component {\n    render() {  \n        return(\n            <div>\n                <section className=\"forest-page\">\n                    <div className=\"forest-image\">\n                        {/* Display Trees and Flowers Cards */}\n                        <Trees treeNum={this.props.treeNum} treeImg={this.props.treeImg} />\n                        <Flowers flowerNum={this.props.flowerNum} flowerImg={this.props.flowerImg} />\n\n                        <div id=\"flowers\">\n\n                        </div>\n                    </div>\n\n                </section>\n                {/* Display planned work time */}\n                <section>\n                    <h1 className=\"centered\">Planned Work Time: <span className=\"streaks\">{this.props.time} Minutes <span role=\"img\" aria-label=\"fire emoji\">🔥</span></span></h1>\n                </section>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'; \nimport DailyGoalDisplay from './DailyGoalDisplay';\nimport ForestDisplay from './ForestDisplay';\n\n\nexport default class ForestContent extends Component {\n    render() {\n        return(\n                <div className=\"col-sm-12 col-md-6 col-lg-7\">\n                    <section className=\"forest-page\">\n                        <DailyGoalDisplay goal={this.props.userInfo.goal} />\n                    </section>   \n\n                    <section>\n                        <ForestDisplay time={this.props.userInfo.time} treeNum={this.props.userInfo.treeNum} treeImg={this.props.userInfo.treeImg} treeName={this.props.userInfo.tree} flowerNum={this.props.userInfo.flowerNum} flowerImg={this.props.userInfo.flowerImg} flowerName={this.props.userInfo.flower}/>\n                    </section>\n                </div>\n        )\n    }\n}","import React, { Component } from 'react'; \n\nexport default class FocusPlaylist extends Component {\n    render() {\n        return(\n                <div className=\"col-sm-12 col-md-3 col-lg-2\">\n                    {/* Display the music list */}\n                    <section>\n                        <h1 className=\"centered\">Focus Playlist</h1>\n                        <hr aria-hidden=\"true\" />\n                            <div className=\"music-card\">\n                                <a href=\"https://www.youtube.com/watch?v=5qap5aO4i9A\"><img src=\"img/lofi.jpg\" alt=\"Lofi Hip Hop Music\"/></a>\n                            </div>\n                            <p aria-hidden=\"true\">Lofi Hip Hop</p>\n\n                            <div className=\"music-card\">\n                                <a href=\"https://www.youtube.com/watch?v=BklGhQYKl30\"><img src=\"img/calm.jpg\" alt=\"Calm Music\"/></a>\n                            </div>\n                            <p aria-hidden=\"true\">Calm Music</p>\n\n                            <div className=\"music-card\">\n                                <a href=\"https://www.youtube.com/watch?v=Dx5qFachd3A\"><img src=\"img/jazz.jpg\" alt=\"Hip Hop Jazz\"/></a>\n                            </div>\n                            <p aria-hidden=\"true\">Hip Hop Jazz</p>\n\n                            <div className=\"music-card\">\n                                <a href=\"https://www.youtube.com/watch?v=lCOF9LN_Zxs\"><img src=\"img/piano.jpg\" alt=\"Piano Music\"/></a>\n                            </div>\n                            <p aria-hidden=\"true\">Piano Music</p>\n\n                            <div className=\"music-card\">\n                                <a href=\"https://www.youtube.com/watch?v=uxzv4pRcuKo\"><img src=\"img/acoustic.jpg\" alt=\"Acoustic Music\"/></a>\n                            </div>\n                            <p aria-hidden=\"true\">Acoustic Music</p>\n                    </section>\n                </div>\n        );\n    }\n\n}","import React, { Component } from 'react'; \nimport SideBar from './SideBar';\nimport ForestContent from './ForestContent';\nimport FocusPlaylist from './FocusPlaylist';\n\n\nexport default class Main extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n\n        return(\n            <div>>\n                <main>\n                    <div className=\"row\">\n                        <SideBar userInfo={this.props.userInfo} addTreeNum={this.props.addTreeNum} addFlowerNum={this.props.addFlowerNum}/>\n                        <ForestContent userInfo={this.props.userInfo} />\n                        <FocusPlaylist />\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'; \n\nexport class TreeCard extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = () => {\n        // This will pass the name of the tree back to main.js\n        this.props.selectedTree(this.props.info.name);\n        this.props.treeCallback(this.props.info.name, this.props.info.img);\n    }\n\n    render() {\n        // Create Cards\n        return(\n            <div className=\"card\" name={this.props.info.name} onClick={this.handleClick}>\n                <img src={this.props.info.img} alt={this.props.info.name}/>\n                <h4 className=\"mt-4\">{this.props.info.name}</h4>\n                <p className=\"description\">{this.props.info.description}</p>\n            </div>\n        )\n    }\n}\n\n\nexport class FlowerCard extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = () => {\n        // This will pass the name of the flower back to main.js\n        this.props.selectedFlower(this.props.info.name);\n        this.props.flowerCallback(this.props.info.name, this.props.info.img);\n    }\n\n    render() {\n        // Create Cards\n        return(\n            <div className=\"card\" name={this.props.info.name} onClick={this.handleClick}>\n                <img src={this.props.info.img} alt={this.props.info.name}/>\n                <h4 className=\"mt-4\">{this.props.info.name}</h4>\n                <p className=\"description\">{this.props.info.description}</p>\n            </div>\n        )\n    }\n}\n\n\nexport class CardList extends Component {\n    constructor(props) {\n        super(props);\n        // Store the selected tree and flower\n        this.state =  {\n            tree: \"\",\n            flower: \"\"\n        }\n    }\n    // Update the tree info in Main.js\n    selectedTree = (tree) => {\n        this.setState((currentState) => {\n            currentState.tree = tree;\n            return currentState;\n        })\n    }\n    // Update the flower info in Main.js\n    selectedFlower = (flower) => {\n        this.setState((currentState) => {\n            currentState.flower = flower;\n            return currentState;\n        })\n    }\n\n    render() {\n        // This will create a list of tree cards\n        let treeCards = this.props.info.map((eachInfo) => {\n            if(eachInfo.type === \"Tree\") {\n                return <TreeCard info={eachInfo} key={eachInfo.id} treeCallback={this.props.treeCallback} selectedTree={this.selectedTree}/>\n            } else {\n                return undefined;\n            }\n        });\n\n        // This will create a list of flower cards\n        let flowerCards = this.props.info.map((eachInfo) => {\n            if (eachInfo.type === \"Flower\") {\n                return <FlowerCard info={eachInfo} key={eachInfo.id} flowerCallback={this.props.flowerCallback} selectedFlower={this.selectedFlower}/>\n            } else {\n                return undefined;\n            }\n        });\n\n        let selectedTree;\n        let selectedFlower;\n\n        // This will display what user has selected\n        if (this.state.tree === undefined | this.state.tree === \"\") {\n            // Shows you the warning message\n            selectedTree = <p className=\"text-danger\">Please select a type of tree</p>;\n        } else {\n            selectedTree = \n            <p>You have selected <strong className=\"streaks\">{this.state.tree}</strong></p>\n        }\n\n        if (this.state.flower === undefined | this.state.flower === \"\") {\n            // Shows you the warning message\n            selectedFlower = <p className=\"text-danger\">Please select a type of flower</p>;\n        } else {\n            selectedFlower = \n            <p>You have selected <strong className=\"streaks\">{this.state.flower}</strong></p>\n        }\n\n        return(\n        // This will combine all the tree and flower cards together\n            <div>\n                <section className=\"col-sm-12 col-md-9 col-lg-10 scheduleForm\">\n                    <h1 className=\"ml-2 mt-2 mb-3\">Here are the trees that you can grow:</h1>\n                    <p className=\"ml-2 mt-2 mb-3\">Tree will grow every 15 seconds (max: 3)</p>\n                    {selectedTree}\n                    <div className=\"card-pool\">\n                        {treeCards}\n                    </div>\n\n                    <br />\n\n                    <h1 className=\"ml-2 mt-3 mb-3\">Here are the flowers that you can plant:</h1>\n                    <p className=\"ml-2 mt-2 mb-3\">Flower will grow everytime you hit \"pause\" (max: 20)</p>\n                    {selectedFlower}\n                    <div className=\"card-pool\">\n                        {flowerCards}\n                    </div>\n                </section>\n            </div>\n            \n        )\n    }\n}\n\n\nexport default class CardPage extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n\n        return(\n            // This will display the trees and flowers cards\n            <div>\n                <CardList info={this.props.info} treeCallback={this.props.treeCallback} flowerCallback={this.props.flowerCallback}/>\n            </div>\n        );\n    }\n\n}","import React, { Component } from 'react'; \nimport Card from './Card';\n\n\n\n// fetch\nimport 'whatwg-fetch';\n\nexport default class PersonalPreference extends Component {\n    constructor() {\n        super();\n        // store the information of flowers and tree\n        this.state = {\n            info: []\n        }\n    }\n\n    // fetch data from json\n    componentDidMount() {\n        fetch(\"./data/ForestInfo.json\")\n        .then((res) => res.json())\n        .then((data) => {\n            this.setState((currState) => {\n                let allTreesFlowers = currState.info.concat(data);\n                return {info: allTreesFlowers};\n            }); // end of setState\n        }) \n        .catch((err) => {\n            console.log(err);\n        }); // end of fetch\n    }\n\n\n    render() {\n        return(\n            <div>\n                <h2 className=\"scheduleTitle\">Personal Preferences</h2>\n                <Card info={this.state.info} treeCallback={this.props.treeCallback} flowerCallback={this.props.flowerCallback}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'; \nimport PersonalPreference from './PersonalPreference';\n\nimport { Redirect } from 'react-router-dom'\n\n\nexport default class DailyGoal extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            inputGoal: \"\", \n            inputTime: \"\",\n            typeWarning: false,\n            numWarning: false,\n            passedCheck: false\n        };\n    }\n\n    handleClick = () => {\n\n        let checkOne = false;\n        let checkTwo = false;\n        \n        // Check if user has selected all the required fields \n        if(this.props.userInfo.didSelectTree === true & this.props.userInfo.didSelectFlower === true) {\n            this.setState({\n                typeWarning: false\n            });\n            checkTwo = true;\n        } else {\n            this.setState({\n                typeWarning: true\n            });\n        }\n\n        // Check the number is larger than 1\n        if(this.state.inputTime === undefined | this.state.inputTime === \"\" | this.state.inputTime < 10) {\n            this.setState({\n                numWarning: true\n            });\n        } else {\n            this.setState({\n                numWarning: false\n            });\n            checkOne = true;\n            \n        }\n\n        // Update the tree and flower selection into main.js\n        if (checkOne === true & checkTwo === true) {\n            this.props.goalCallback(this.state.inputGoal, this.state.inputTime);\n            this.setState({passedCheck: true}); \n        }\n    }\n\n    handleChange = (event) => {\n        // track what user has typed\n        let name = event.target.name;\n        let value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    } \n\n\n    render() {\n\n        let typeWarningMsg;\n        let numWarningMsg;\n        \n        // Check whether or not to display the type warning message\n        if (this.state.typeWarning === false) {\n            typeWarningMsg = undefined;\n        } else {\n            // Prompt an error\n            typeWarningMsg = \n            <div className=\"alert alert-danger\" role=\"alert\">\n                Please select the required fields in the Personal Preference\n            </div>\n        }\n\n        // Check whether or not to display the number warning message\n        if (this.state.numWarning === false) {\n            numWarningMsg = undefined;\n        } else {\n            // Prompt an error\n            numWarningMsg = \n            <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                Please enter a correct time\n            </div>\n        }\n\n        // If it passes both checks\n        if (this.state.passedCheck) {\n            return <Redirect to=\"/content\" />\n        }\n\n        // The content of the daily goal page\n        return(\n            <div>\n                <h2 className=\"scheduleTitleTop\">Daily Goals</h2>\n                <section className=\"col-sm-12 col-md-7 col-lg-8 scheduleForm\">\n                    <div>\n                        <p><strong>Welcome!</strong> What is your goal for today? (Optional)</p>\n                        <textarea type=\"text\" name=\"inputGoal\" className=\"form-control\" placeholder=\"My goal for today is...\" aria-label=\"Enter your goal for today\" value={this.state.inputGoal} onChange={this.handleChange}></textarea>\n\n                        <p>Please enter the amount of minutes you want to work:</p>\n                        <input type=\"number\" name=\"inputTime\" placeholder=\"Minimum 10 minutes\" aria-label=\"Enter the amount of time you want to work\" value={this.state.inputTime} onChange={this.handleChange}/> \n                        {numWarningMsg}\n                    </div>\n                </section>\n\n                <PersonalPreference treeCallback={this.props.treeCallback} flowerCallback={this.props.flowerCallback}/>\n\n                {typeWarningMsg}\n\n                <div className=\"text-center\">\n                    <button type=\"button\" className=\"mx-2 mt-1 mb-4\" id=\"main-btn\" aria-label=\"Submit Daily Goals\" role=\"button\" onClick={this.handleClick}>Submit</button>\n                </div>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react'; \n\nexport default class Footer extends Component {\n\n    render() {\n        return(\n            <div>\n                <footer className=\"centered\">\n                    <p>This is a project for our Info 340 class</p>\n                    <p>Contact us: <a href=\"mailto:ganlin@uw.edu\" aria-label=\"Email Larry Tian\">ganlin@uw.edu</a> &amp; <a href=\"mailto:rcm23@uw.edu\" aria-label=\"Email Raphael Manansala\">rcm23@uw.edu</a></p>\n                    <p>&copy; Larry Tian &amp; Raphael Manansala</p>\n                </footer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'; \nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n\nexport default class SignUpForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user: null\n        };\n    }\n\n     // Configure Firebase UI (inside the component, public class field)\n    uiConfig = {\n        //which sign in values should we support?\n        signInOptions: [\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID\n        ],\n        // for external sign-in methods, use popup instead of redirect\n        signInFlow: \"popup\"\n    };\n\n    componentDidMount() {\n\n        this.authUnSubFunction = firebase.auth().onAuthStateChanged((firebaseUser) => {\n            if (firebaseUser) {         // If exists, then we logged in\n                this.setState({ user: firebaseUser });\n                this.props.userCallback(this.state.user.email);\n            } else {\n                this.setState({ user: null })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.authUnSubFunction(); // stop listening for auth changes\n    }\n    \n    handleSignOut = () => {\n        this.setState({ errorMessage:null }); //clear old error\n    \n        firebase.auth().signOut()\n        .catch((err) => {\n            this.setState({errorMessage: err.message})\n        })\n        this.props.userCallback(\"\");\n    }\n    \n    handleChange = (event) => {\n        let field = event.target.name;  //which input\n        let value = event.target.value; //what value\n    \n        let changes = {}; //object to hold changes\n        changes[field] = value;\n        this.setState(changes);\n    }\n    \n    \n   \n    \n    \n    \n    render() {\n        let content = null;\n        if(!this.state.user) { //signed out\n            content = (\n                <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n            )\n        } else {\n            content = (\n                <div>\n                    <section>\n                        <div className=\"alert alert-success\">\n                            <h3 className=\"ml-3\">Logged in as {this.state.user.displayName} </h3>\n                        </div>\n\n                        <button className=\"btn btn-warning float-right\" onClick={this.handleSignOut}>\n                            Sign Out\n                        </button>\n\n                    </section>\n\n                    \n                    \n                </div>\n            )\n        }\n    \n        return (\n            <div className=\"col-sm-12 col-md-3 col-lg-3\">\n                <h2 className=\"scheduleTitleTop\">Log In</h2>\n                <section className=\"ml-3\">\n                    {/* only included if first clause is true */}\n                    {this.state.errorMessage &&\n                        <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n                    }\n            \n                    {/* show content based on user login state */}\n                    {content}\n                </section>\n    \n            </div>\n        )\n    }\n\n\n}","import React, { Component } from 'react'; \nimport firebase from 'firebase/app';\n\n\nexport default class UserInfo extends Component {\n\n    constructor(props){\n        super(props);\n\n        // This will save the firebase user data\n        this.state = {\n            user: []\n        }\n    }\n\n    // This will update the firebase user data\n    handleClick = () => {\n            let userRef = firebase.database().ref(this.props.userInfo.user);\n            userRef.set({\n              goal: this.props.userInfo.goal,\n              tree: this.props.userInfo.tree,\n              flower: this.props.userInfo.flower,\n              time: this.props.userInfo.time,\n              animal: this.props.userInfo.animal\n            })\n            .catch(err => console.log(err)); // log any erros\n    }\n\n    // this will pull the firebase user data\n    componentDidMount() {\n        if(this.props.userInfo.user === undefined || this.props.userInfo.user === \"\") {\n            return;\n        } else {\n            let prevGoalRef = firebase.database().ref(this.props.userInfo.user);\n            prevGoalRef.on('value', (snapshot) => {\n                let value = snapshot.val();\n                this.setState({ user: value });\n            });\n        }\n    }\n\n    // this will replace empty data with \"Nothing saved\"\n    displayContent = (content) => {\n        if (content === undefined || (content === \"\")) {\n            return \"Nothing saved\";\n        } else {\n            return content;\n        }\n    }\n\n\n    render() {\n        let content;\n        \n        // Display different content based on the log in status\n        if(this.props.userInfo.user === undefined || this.props.userInfo.user === \"\") {\n            // Display the warning box\n            content = <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                Please Log in first\n            </div>\n        } else {\n            // Display the data\n            content = \n            <div>\n                <h2 className=\"ml-3 mt-2 mb-2\">WELCOME!</h2>\n\n                <h3 className=\"ml-3 mt-2 mb-2\">Here is your previous saved goal: </h3>\n                <p className=\"ml-3 mt-2 mb-2\"><strong className=\"streaks centered\">{this.displayContent(this.state.user.goal)}</strong></p>\n\n                <h3 className=\"ml-3 mt-2 mb-2\">Here is your previous saved work time: </h3>\n                <p className=\"ml-3 mt-2 mb-2\"><strong className=\"streaks centered\">{this.displayContent(this.state.user.time)}</strong></p>\n\n                <h3 className=\"ml-3 mt-2 mb-2\">Here is your previous saved tree preference: </h3>\n                <p className=\"ml-3 mt-2 mb-2\"><strong className=\"streaks centered\">{this.displayContent(this.state.user.tree)}</strong></p>\n\n                <h3 className=\"ml-3 mt-2 mb-2\">Here is your previous saved flower preference: </h3>\n                <p className=\"ml-3 mt-2 mb-2\"><strong className=\"streaks centered\">{this.displayContent(this.state.user.flower)}</strong></p>\n\n                <h3 className=\"ml-3 mt-2 mb-2\">Here is your previous accomplishment: </h3>\n                <p className=\"ml-3 mt-2 mb-2\"><strong className=\"streaks centered\">{this.displayContent(this.state.user.animal)}</strong></p>\n\n                <div className=\"text-center\">\n                    <button type=\"button\" className=\"mx-2 mt-1 mb-4 text-center\" id=\"main-btn\" aria-label=\"Submit Personal Preference\" role=\"button\" onClick={this.handleClick}>Save your current preference</button>\n                </div>\n\n                <p className=\"text-center\">Please re-enter and save your goal after you log in!</p>\n            </div>\n        }\n\n        return(\n            <div className=\"col-sm-12 col-md-7 col-lg-7\">\n                <h2 className=\"scheduleTitleTop\">User Profile</h2>\n                <section className=\"ml-3\">\n                    {content}\n                </section>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'; \nimport SignUpForm from './SignUpForm';\nimport UserInfo from './UserInfo'\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <SignUpForm userCallback={this.props.userCallback} userInfo={this.props.userInfo}/> \n                    <UserInfo userInfo={this.props.userInfo}/>               \n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'; \nimport Navbar from './Nav';\nimport Main from './Main';\nimport DailyGoal from './DailyGoal';\nimport Footer from './Footer';\nimport User from './User';\n\n\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // User information \n    this.state = {\n      user: \"\",\n      goal: \"\",\n      time: 0,\n      flower: \"\",\n      flowerImg: \"\",\n      tree: \"\",\n      treeImg: \"\",\n      treeNum: 0,\n      flowerNum: 0,\n      animal: \"\",\n      didSelectTree: false,\n      didSelectFlower: false\n    }\n}\n\n  // Replace email to user account\n  enterUser = (user) => {\n    this.setState((currentState) => {\n      currentState.user = user.replace(/[^a-zA-Z0-9]/g, \"\");\n      return currentState;\n    })\n  }\n\n  // update the daily goal \n  enterGoal = (goal, goalTime) => {\n    this.setState((currentState) => {\n        currentState.goal = goal;\n        currentState.time = goalTime;\n        currentState.treeNum = 0;\n        currentState.flowerNum = 0;\n        return currentState;\n    })\n}\n\n\n  // update the tree preference\n  enterTree = (tree, treePath) => {\n    this.setState((currentState) => {\n        currentState.tree = tree;\n        currentState.treeImg = treePath;\n        currentState.didSelectTree = true;\n        return currentState;\n    })\n  }\n\n  // update the flower preference\n  enterFlower = (flower, flowerPath) => {\n    this.setState((currentState) => {\n        currentState.flower = flower;\n        currentState.flowerImg = flowerPath;\n        currentState.didSelectFlower = true;\n        return currentState;\n    })\n  }\n\n  // increment the tree\n  addTreeNum = () => {\n    this.setState({\n      treeNum: this.state.treeNum + 1\n    });\n  }\n\n  // increment the flower\n  addFlowerNum = () => {\n    this.setState({\n      flowerNum: this.state.flowerNum + 1\n    });\n  }\n\n  render() {\n\n    return (\n      <div>\n          \n        <BrowserRouter>\n          {/* Header */}\n          <Navbar/>\n\n            {/* Main Content*/}\n            <Switch>\n\n            {/* Display Daily Goal page */}\n            <Route path='/' exact render={(routerProps) => (\n              <DailyGoal {...routerProps} goalCallback={this.enterGoal} pageCallback={this.updatePage} treeCallback={this.enterTree} flowerCallback={this.enterFlower} userInfo={this.state}/>\n            )} />\n\n            {/* Display Main Interaction page */}\n            <Route path='/content' render={(routerProps) => (\n              <Main {...routerProps} userInfo={this.state} pageCallback={this.updatePage} goalCallback={this.enterGoal} treeCallback={this.enterTree} flowerCallback={this.enterFlower} addTreeNum={this.addTreeNum} addFlowerNum={this.addFlowerNum}/>\n            )} />\n\n            {/* Display User Profile page */}\n            <Route path='/user' render={(routerProps) => (\n              <User {...routerProps} userCallback={this.enterUser} userInfo={this.state}/>\n            )}/>\n\n            </Switch>\n\n          {/* Footer */}\n          <Footer/>\n        </BrowserRouter>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React \nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Firebase\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/analytics';\n\n// CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\n\n// import 'firebase/database';\n// import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n// Firebase Configuration \nvar firebaseConfig = {\n  apiKey: \"AIzaSyB50giTBGpRqVAG4AtYdE7xbWUrCXOLR8k\",\n  authDomain: \"animal-forest-info340.firebaseapp.com\",\n  databaseURL: \"https://animal-forest-info340.firebaseio.com\",\n  projectId: \"animal-forest-info340\",\n  storageBucket: \"animal-forest-info340.appspot.com\",\n  messagingSenderId: \"1062937607745\",\n  appId: \"1:1062937607745:web:07d76a646ffab4c59bd0c0\",\n  measurementId: \"G-E2DSQB0J8N\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}